{"ast":null,"code":"var _jsxFileName = \"/root/react-projs/LGMVIP-WebDev/task-2/task-2/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport Navbar from '../components/Navigation/Navigation';\nimport Loader from './loader';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(); //defining the states\n\n    this.onButtonSubmit = () => {\n      //changes the state of the button is clicked\n      this.setState({\n        isButtonClicked: !this.isButtonClicked\n      });\n      const timer = setTimeout(() => {\n        //fetches the api which is provided in letsgrowmore\n        fetch('https://reqres.in/api/users?page=1').then(response => {\n          return response.json();\n        }).then(users => {\n          this.setState({\n            robots: users.data\n          });\n        });\n      }, 3000);\n      return () => clearTimeout(timer);\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfeild: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfeild: '',\n      isButtonClicked: false\n    };\n  } //function when the button is clicked .\n  //it fetches the api\n  //and stores in robots\n\n\n  render() {\n    //used to filter the robots bt their first name\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n    }); //at the starting\n    //when the user has not clicked the button\n    //and the api is not fetched\n\n    if (this.state.robots.length === 0 && this.state.isButtonClicked === false) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"tc blue\",\n          children: \"Please click the button to get the users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } //when the button is clicked and the api is being called\n    //but no data is fetched\n    else if (this.state.robots.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loaddisplay\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {\n            onButtonSubmit: this.onButtonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"tc blue\",\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Loader, {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this);\n      } //when the button is clicked and the api has fetched data\n      else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {\n              onButtonSubmit: this.onButtonSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tc\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"tc blue\",\n                children: \"Users Panel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n                searchChange: this.onSearchChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n                children: /*#__PURE__*/_jsxDEV(CardList, {\n                  robots: filteredRobots\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/react-projs/LGMVIP-WebDev/task-2/task-2/src/containers/App.js"],"names":["React","Component","SearchBox","CardList","Scroll","Navbar","Loader","App","constructor","onButtonSubmit","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","robots","data","clearTimeout","onSearchChange","event","searchfeild","target","value","state","render","filteredRobots","filter","first_name","toLowerCase","includes","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport Navbar from '../components/Navigation/Navigation';\nimport Loader from './loader';\nimport './styles.css';\n\nclass App extends Component {\n\n    constructor() {\n        super()\n        //defining the states\n        this.state = {\n            robots: [],\n            searchfeild: '',\n            isButtonClicked: false\n        }\n    }\n\n    //function when the button is clicked .\n    //it fetches the api\n    //and stores in robots\n    onButtonSubmit = () => {\n        //changes the state of the button is clicked\n        this.setState({ isButtonClicked: !this.isButtonClicked })\n        const timer = setTimeout(() => {\n            //fetches the api which is provided in letsgrowmore\n            fetch('https://reqres.in/api/users?page=1').then(response => {\n                return response.json();\n            })\n                .then(users => {\n                    this.setState({ robots: users.data })\n                });\n        }, 3000);\n\n        return () => clearTimeout(timer);\n    }\n\n    //function used to change the searchfield\n    onSearchChange = (event) => {\n        this.setState({ searchfeild: event.target.value })\n    }\n\n    render() {\n\n        //used to filter the robots bt their first name\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n        })\n\n        //at the starting\n        //when the user has not clicked the button\n        //and the api is not fetched\n        if (this.state.robots.length === 0 && this.state.isButtonClicked === false) {\n            return (\n                <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit} />\n                    <h1 className='tc blue'>Please click the button to get the users...</h1>\n                </>\n            );\n\n        }\n\n        //when the button is clicked and the api is being called\n        //but no data is fetched\n        else if (this.state.robots.length === 0) {\n            return (\n                <div className=\"loaddisplay\">\n                    <Navbar onButtonSubmit={this.onButtonSubmit} />\n                    <h1 className='tc blue'>Loading</h1>\n                    <Loader className='loader'></Loader>\n                </div>\n            );\n        }\n\n        //when the button is clicked and the api has fetched data\n        else {\n            return (\n                <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit} />\n                    <div className='tc'>\n                        <h1 className='tc blue' >Users Panel</h1>\n                        <SearchBox searchChange={this.onSearchChange} />\n                        <Scroll>\n                            <CardList robots={filteredRobots} />\n                        </Scroll>\n\n                    </div>\n                </>\n            );\n        }\n\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}